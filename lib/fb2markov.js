// Generated by CoffeeScript 1.6.3
var getInbox, makeQuery, testAPI;

testAPI = function() {
  console.log("Welcome!  Fetching your information.... ");
  return FB.api("/me", function(response) {
    return console.log("Good to see you, " + response.name + ".");
  });
};

makeQuery = function(queryText, cb) {
  return FB.api({
    method: "fql.query",
    query: queryText
  }, cb);
};

getInbox = function() {
  var handleThreads;
  handleThreads = function(threadList) {
    var getMessages, id, num, _results;
    getMessages = function(messageCount) {
      var key, lastFunc, queryReps, rep, val, _i, _results;
      lastFunc = function(lastResponse) {
        var key, val, _results;
        console.log("lastResponse " + lastResponse);
        _results = [];
        for (key in lastResponse) {
          val = lastResponse[key];
          console.log("key " + key + " val " + val[0]);
          break;
        }
        return _results;
      };
      for (key in messageCount) {
        val = messageCount[key];
        console.log("key " + key + " val " + messageCount['error_code']);
        break;
      }
      queryReps = messageCount[0]["message_count"] / 30;
      _results = [];
      for (rep = _i = 0; 0 <= queryReps ? _i <= queryReps : _i >= queryReps; rep = 0 <= queryReps ? ++_i : --_i) {
        _results.push(makeQuery("SELECT thread_id, body, author_id, created_time 					FROM message WHERE thread_id = " + id['thread_id'] + " 					ORDER BY created_time ASC LIMIT " + (rep * 30) + "," + ((rep * 30) + 1), lastFunc));
      }
      return _results;
    };
    _results = [];
    for (num in threadList) {
      id = threadList[num];
      console.log("key " + num + " val " + threadList['error_code']);
      console.log("Thread: " + id['thread_id']);
      _results.push(makeQuery("SELECT message_count FROM thread WHERE 				thread_id = " + id['thread_id'] + " LIMIT 1", getMessages));
    }
    return _results;
  };
  return makeQuery("SELECT thread_id FROM thread WHERE folder_id = 0", handleThreads);
};

window.fbAsyncInit = function() {
  FB.init({
    appId: "364959256980832",
    status: true,
    cookie: true,
    xfbml: true
  });
  return FB.Event.subscribe("auth.authResponseChange", function(response) {
    if (response.status === "connected") {
      return getInbox();
    } else if (response.status === "not_authorized") {
      return FB.login();
    } else {
      return FB.login();
    }
  });
};

(function(d) {
  var id, js, ref;
  js = void 0;
  id = "facebook-jssdk";
  ref = d.getElementsByTagName("script")[0];
  if (d.getElementById(id)) {
    return;
  }
  js = d.createElement("script");
  js.id = id;
  js.async = true;
  js.src = "https://connect.facebook.net/en_US/all.js";
  return ref.parentNode.insertBefore(js, ref);
})(document);
